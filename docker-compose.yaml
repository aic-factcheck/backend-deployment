version: "3"

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.2
    environment:
      - discovery.type=single-node
      - transport.host=localhost
      - http.host=0.0.0.0
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_SEARCH_PWD}
      - KIBANA_PASSWORD=${ELASTIC_SEARCH_PWD}
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - fact-checking-network
  
  kibana:
    image: docker.elastic.co/kibana/kibana:8.1.2
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=${ELASTIC_SEARCH_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTIC_SEARCH_PWD}
      - SERVER_BASEPATH=/kibana
      - SERVER_REWRITEBASEPATH=true
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - fact-checking-network

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  nginx:
    image: rastokopal/fact-checking-fe:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    restart: on-failure
    depends_on:
      - api
    networks:
      - fact-checking-network

  api:
    image: rastokopal/fact-checking-api:latest
    ports:
      - 3000:3000
    env_file:
      - .env
    depends_on:
      - mongodb
    networks:
      - fact-checking-network

  extract-service:
    image: rastokopal/fact-checking-extract-service:1.0.0
    ports:
      - 8080:8080
    networks:
      - fact-checking-network

  mongodb:
    image: mongo:latest
    environment:
      - MONGODB_DATABASE=${MONGO_DB_NAME}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_NAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PWD}
      - MONGO_INITDB_DATABASE=${MONGO_DB_NAME}
    ports:
      - "27017:27017"
    command: [--auth]
    restart: always
    volumes:
      - mongodb_data:/data/db
    networks:
      - fact-checking-network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - fact-checking-network

volumes:
  mongodb_data:
  redis_data:
  elasticsearch-data:

networks:
    fact-checking-network:
      driver: bridge